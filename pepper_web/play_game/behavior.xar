<?xml version="1.0" encoding="UTF-8" ?><ChoregrapheProject xmlns="http://www.aldebaran-robotics.com/schema/choregraphe/project.xsd" xar_version="3"><Box name="root" id="-1" localization="8" tooltip="Root box of Choregraphe&apos;s behavior. Highest level possible." x="0" y="0"><bitmap>media/images/box/root.png</bitmap><script language="4"><content><![CDATA[]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" /><Timeline enable="0"><BehaviorLayer name="behavior_layer1"><BehaviorKeyframe name="keyframe1" index="1"><Diagram scale="70.7107"><Box name="Football" id="19" localization="8" tooltip="ID : #04E 0002&#x0A;&#x0A;===================&#x0A;&#x0A;Tags : &#x0A;- Football" x="493" y="486"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="299"><BehaviorLayer name="behavior_layer1"><BehaviorKeyframe name="keyframe1" index="1"><Diagram><Box name="Move Along" id="3" localization="8" tooltip="Move along a trajectory given by an attached .pmt file.&#x0A;&#x0A;V1.0.0&#x0A;" x="125" y="75"><bitmap>media/images/box/movement/walk_forward.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        self.motion = ALProxy("ALMotion")
        self.navigation = ALProxy("ALNavigation")

    def onLoad(self):
        pass

    def onUnload(self):
        self.motion.move(0., 0., 0.)

    def onInput_onStart(self):
        relativePath = self.getParameter("Planar Move Trajectory")
        if len(relativePath) == 0:
            self.failure()
            return

        behaviorPath = self.behaviorAbsolutePath()
        trajectoryPath = behaviorPath + relativePath

        trajectoryData = str()
        with open(trajectoryPath, 'r') as trajectoryFile:
            trajectoryData = trajectoryFile.read()
        trajectory = eval(trajectoryData)

        if trajectory[0] != "Composed": # dealing with trajectories with radius
            trajectory = trajectory[0]

        result = self.navigation.moveAlong(trajectory)
        if (result):
            self.success()
        else:
            self.failure()

    def onInput_onStop(self):
        self.onUnload()]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="success" type="1" type_size="1" nature="1" inner="0" tooltip="Stimulated if the trajectory was correctly executed." id="4" /><Output name="failure" type="1" type_size="1" nature="1" inner="0" tooltip="Stimulated if the trajectory was stopped to avoid collisions." id="5" /><Parameter name="Planar Move Trajectory" inherits_from_parent="0" content_type="4" value="/move.pmt" default_value="" tooltip="" id="6" /></Box><Link inputowner="3" indexofinput="2" outputowner="0" indexofoutput="1" /></Diagram></BehaviorKeyframe></BehaviorLayer><ActuatorList model=""><ActuatorCurve name="value" actuator="HeadPitch" mute="0" unit="0"><Key frame="17" value="11.5" /><Key frame="37" value="17.7" /><Key frame="54" value="-17.4902" /><Key frame="65" value="-17.4902" /><Key frame="71" value="-17.4902" /><Key frame="77" value="-17.4902" /><Key frame="83" value="-9.2" /><Key frame="88" value="-9.2" /><Key frame="94" value="-17.4902" /><Key frame="115" value="-19.5117" /><Key frame="134" value="-25.6" /><Key frame="142" value="-37" /><Key frame="192" value="-30.7" /><Key frame="208" value="3.60351" /><Key frame="223" value="-26.8066" /><Key frame="244" value="-26.8066" /><Key frame="261" value="-4.9" /><Key frame="279" value="-11.25" /></ActuatorCurve><ActuatorCurve name="value" actuator="HeadYaw" mute="0" unit="0"><Key frame="17" value="-38.8" /><Key frame="54" value="-47.8125" /><Key frame="65" value="-47.8125" /><Key frame="71" value="-26.9" /><Key frame="77" value="-26.9" /><Key frame="83" value="-73.2" /><Key frame="88" value="-73.2" /><Key frame="94" value="-47.8125" /><Key frame="115" value="-22.6758" /><Key frame="142" value="0" /><Key frame="192" value="0" /><Key frame="208" value="0" /><Key frame="223" value="0" /><Key frame="244" value="0" /><Key frame="279" value="0" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="0"><Key frame="23" value="-84.7252" /><Key frame="41" value="-77.0786" /><Key frame="63" value="-67.5879" /><Key frame="93" value="-67.5879" /><Key frame="115" value="-73.3887" /><Key frame="134" value="-12.6" /><Key frame="142" value="-15.293" /><Key frame="192" value="-18.2812" /><Key frame="208" value="-75.5859" /><Key frame="223" value="-11.25" /><Key frame="244" value="-11.25" /><Key frame="261" value="-71.7188" /><Key frame="274" value="-29.8828" /><Key frame="283" value="-20.5664" /><Key frame="292" value="-27.2434"><Tangent side="left" interpType="bezier" abscissaParam="-3.50031" ordinateParam="0.127691" /><Tangent side="right" interpType="bezier" abscissaParam="0" ordinateParam="0" /></Key></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="0"><Key frame="23" value="-19.5144" /><Key frame="41" value="-95.1891" /><Key frame="63" value="-97.9101" /><Key frame="93" value="-97.9101" /><Key frame="115" value="-91.4941" /><Key frame="134" value="-45.6" /><Key frame="142" value="-49.3945" /><Key frame="192" value="-53.6133" /><Key frame="208" value="23.5547" /><Key frame="223" value="-29.3555" /><Key frame="244" value="-29.3555" /><Key frame="261" value="-63.9844" /><Key frame="274" value="-69.9609" /><Key frame="283" value="-69.873" /><Key frame="292" value="-69.9609" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="1"><Key frame="23" value="0.61" /><Key frame="41" value="0.4304" /><Key frame="63" value="0.433216" /><Key frame="93" value="0.433216" /><Key frame="115" value="0.241652" /><Key frame="134" value="1" /><Key frame="142" value="0.906854" /><Key frame="192" value="0.8471" /><Key frame="208" value="0.0360281" /><Key frame="223" value="0.956942" /><Key frame="244" value="0.956942" /><Key frame="261" value="0.587873" /><Key frame="274" value="0.588752" /><Key frame="283" value="0.67" /><Key frame="292" value="0.47" /><Key frame="294" value="0.588752" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="0"><Key frame="23" value="9.92936" /><Key frame="41" value="8.34731" /><Key frame="63" value="-8.52539" /><Key frame="93" value="-8.52539" /><Key frame="115" value="-61.084" /><Key frame="134" value="-8.9" /><Key frame="142" value="15.3809" /><Key frame="192" value="31.5527" /><Key frame="208" value="-2.81249" /><Key frame="223" value="-77.7832" /><Key frame="244" value="-77.7832" /><Key frame="261" value="9.4043" /><Key frame="274" value="89.8242" /><Key frame="283" value="97.1192"><Tangent side="right" interpType="bezier" abscissaParam="2.73871" ordinateParam="1.01801" /></Key><Key frame="292" value="89.9121"><Tangent side="left" interpType="bezier" abscissaParam="-4.82016" ordinateParam="-6.08243e-09" /></Key></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="0"><Key frame="23" value="23.0252" /><Key frame="41" value="38.0547" /><Key frame="63" value="63.7207" /><Key frame="93" value="63.7207" /><Key frame="115" value="29.1797" /><Key frame="134" value="0.5" /><Key frame="142" value="0.9668" /><Key frame="192" value="1.14258" /><Key frame="208" value="19.8633" /><Key frame="223" value="18.1055" /><Key frame="244" value="18.1055" /><Key frame="261" value="10.5469" /><Key frame="274" value="7.03126" /><Key frame="283" value="7.73437" /><Key frame="292" value="7.38281" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="0"><Key frame="23" value="-76.3803" /><Key frame="41" value="-104.5" /><Key frame="63" value="-104.5" /><Key frame="93" value="-104.5" /><Key frame="115" value="-19.6023" /><Key frame="134" value="1.9" /><Key frame="142" value="2.0191" /><Key frame="192" value="0.261268" /><Key frame="208" value="-13.0104" /><Key frame="223" value="-48.9581" /><Key frame="244" value="-48.9581" /><Key frame="261" value="-56.7805" /><Key frame="274" value="0.43705" /><Key frame="277" value="0.529749"><Tangent side="right" interpType="bezier" abscissaParam="4.13333" ordinateParam="0" /></Key><Key frame="284" value="15.8181"><Tangent side="right" interpType="bezier" abscissaParam="6.86905" ordinateParam="-0.351024" /></Key><Key frame="294" value="0.349159" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="0"><Key frame="21" value="88.5" /><Key frame="44" value="75.853" /><Key frame="68" value="42.627" /><Key frame="96" value="42.627" /><Key frame="115" value="9.31641" /><Key frame="142" value="19.0723" /><Key frame="192" value="20.918" /><Key frame="208" value="78.6621" /><Key frame="223" value="14.6777" /><Key frame="244" value="14.6777" /><Key frame="261" value="70.6641" /><Key frame="276" value="29.8828" /><Key frame="286" value="20.5664" /><Key frame="297" value="27.2434"><Tangent side="left" interpType="bezier" abscissaParam="-4.27815" ordinateParam="-0.156067" /><Tangent side="right" interpType="bezier" abscissaParam="0" ordinateParam="0" /></Key></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="0"><Key frame="21" value="-3.07861" /><Key frame="44" value="42.4493" /><Key frame="68" value="43.7695" /><Key frame="96" value="43.7695" /><Key frame="115" value="47.4609" /><Key frame="142" value="60.6445" /><Key frame="192" value="62.4902" /><Key frame="208" value="-25.9277" /><Key frame="223" value="20.5664" /><Key frame="244" value="20.5664" /><Key frame="261" value="72.5977" /><Key frame="276" value="69.9609" /><Key frame="286" value="69.873" /><Key frame="297" value="69.9609" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="1"><Key frame="21" value="0.9544" /><Key frame="44" value="0.9544" /><Key frame="68" value="0.942004" /><Key frame="96" value="0.942004" /><Key frame="115" value="0.544815" /><Key frame="142" value="0.549209" /><Key frame="192" value="0.552724" /><Key frame="208" value="0.0369068" /><Key frame="223" value="0.942882" /><Key frame="244" value="0.942882" /><Key frame="261" value="0.630931" /><Key frame="276" value="0.588752" /><Key frame="286" value="0.67" /><Key frame="297" value="0.47" /><Key frame="299" value="0.588752" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="0"><Key frame="21" value="-19.4217" /><Key frame="44" value="7.64898" /><Key frame="68" value="-2.10938" /><Key frame="96" value="-2.10938" /><Key frame="115" value="-29.0039" /><Key frame="134" value="119.5" /><Key frame="142" value="114.961" /><Key frame="192" value="110.479" /><Key frame="208" value="-15.9961" /><Key frame="223" value="-74.4434" /><Key frame="244" value="-74.4434" /><Key frame="261" value="24.6094" /><Key frame="276" value="89.8242" /><Key frame="286" value="97.1192"><Tangent side="right" interpType="bezier" abscissaParam="3.34733" ordinateParam="-1.24424" /></Key><Key frame="297" value="89.9121"><Tangent side="left" interpType="bezier" abscissaParam="-5.8913" ordinateParam="7.43408e-09" /></Key></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="0"><Key frame="21" value="-34.1044" /><Key frame="44" value="-54.5832" /><Key frame="68" value="-55.6348" /><Key frame="96" value="-55.6348" /><Key frame="115" value="-26.1035" /><Key frame="134" value="-41" /><Key frame="142" value="-36.0352" /><Key frame="192" value="-30.6738" /><Key frame="208" value="-21.2695" /><Key frame="223" value="-15.9082" /><Key frame="244" value="-15.9082" /><Key frame="261" value="-13.2715" /><Key frame="276" value="-7.03126" /><Key frame="286" value="-7.73437" /><Key frame="297" value="-7.38281" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="0"><Key frame="21" value="39.461" /><Key frame="44" value="-11.3404" /><Key frame="68" value="-15.2077" /><Key frame="96" value="-15.2077" /><Key frame="115" value="-47.8155" /><Key frame="134" value="20.9" /><Key frame="142" value="17.7517" /><Key frame="192" value="15.4665" /><Key frame="208" value="-37.6201" /><Key frame="223" value="99.8426" /><Key frame="244" value="99.8426" /><Key frame="261" value="75.4966" /><Key frame="276" value="-0.43705" /><Key frame="280" value="-0.529749"><Tangent side="right" interpType="bezier" abscissaParam="4.72381" ordinateParam="0" /></Key><Key frame="288" value="-15.8181"><Tangent side="right" interpType="bezier" abscissaParam="7.55597" ordinateParam="0.386126" /></Key><Key frame="299" value="-0.349159" /></ActuatorCurve><ActuatorCurve name="value" actuator="HipPitch" mute="0" unit="0"><Key frame="20" value="-40.1" /><Key frame="63" value="-13.2134" /><Key frame="92" value="-12.6377" /><Key frame="115" value="-1.18777" /><Key frame="134" value="-23.6519" /><Key frame="142" value="-16.4579" /><Key frame="192" value="-19.0853" /><Key frame="208" value="-25.9564" /><Key frame="223" value="4.2129" /><Key frame="244" value="4.2129" /><Key frame="261" value="-16.9714" /><Key frame="279" value="-1.89703" /></ActuatorCurve><ActuatorCurve name="value" actuator="KneePitch" mute="0" unit="0"><Key frame="20" value="18.3" /><Key frame="63" value="9.14193" /><Key frame="92" value="9.14193" /><Key frame="115" value="-1.37336" /><Key frame="134" value="6.24564" /><Key frame="142" value="2.47333" /><Key frame="192" value="3.20153" /><Key frame="208" value="10.7669" /><Key frame="223" value="-6.94338" /><Key frame="244" value="-6.94338" /><Key frame="261" value="5.54698" /><Key frame="279" value="-0.464532" /></ActuatorCurve><ActuatorCurve name="value" actuator="HipRoll" mute="0" unit="0"><Key frame="63" value="0" /><Key frame="92" value="0" /><Key frame="115" value="0" /><Key frame="134" value="0" /><Key frame="142" value="0" /><Key frame="192" value="0" /><Key frame="208" value="0" /><Key frame="223" value="0" /><Key frame="244" value="0" /><Key frame="261" value="0" /><Key frame="279" value="0" /></ActuatorCurve></ActuatorList></Timeline><Resource name="Standing" type="Lock" timeout="1" /><Resource name="All motors" type="Lock" timeout="1" /></Box><Box name="Random Int." id="3" localization="8" tooltip="Generate a random integer between a min number and a max number set as&#x0A;parameters.&#x0A;Note that the min and max numbers are included in the range of possible values." x="60" y="37"><bitmap>media/images/box/box-script.png</bitmap><script language="4"><content><![CDATA[import random

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        # attributes needed in shuffle mode
        self.nMax = 1
        self.nMin = 0
        self.nIndex = self.nMax - self.nMin
        self.aShuffled = []

    def onUnload(self):
         #puts code for box cleanup here
        pass

    def onInput_onStart(self):
        nMax = self.getParameter("Max value")
        nMin = self.getParameter("Min value")
        if( nMin > nMax ):
            temp = nMin
            nMin = nMax
            nMax = temp
        # if shuffle
        if( self.getParameter("Shuffle") ):
            self.nIndex += 1
            if( self.nIndex > self.nMax - self.nMin or nMax != self.nMax or nMin != self.nMin ):
                self.nMax = nMax
                self.nMin = nMin
                self.nIndex = 0
                self.aShuffled = []
                for i in range( nMin, nMax + 1 ):
                    self.aShuffled.insert( random.randint(0, len(self.aShuffled)), i )
            self.output_RandomValue( self.aShuffled[self.nIndex] )
        # if not shuffle
        else:
            self.nIndex = self.nMax - self.nMin
            self.output_RandomValue( random.randint( nMin, nMax ) )]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="1" inner="0" tooltip="Generate a random integer." id="2" /><Output name="output_RandomValue" type="2" type_size="1" nature="2" inner="0" tooltip="The random value obtained." id="3" /><Parameter name="Min value" inherits_from_parent="0" content_type="1" value="0" default_value="0" min="0" max="1000" tooltip="The minimum value you can get." id="4" /><Parameter name="Max value" inherits_from_parent="0" content_type="1" value="1" default_value="10" min="0" max="1000" tooltip="The maximum number you can get." id="5" /><Parameter name="Shuffle" inherits_from_parent="0" content_type="0" value="1" default_value="0" tooltip="When this option is selected the box will give all the numbers between min and&#x0A;max before giving the same number twice." id="6" /></Box><Box name="Switch Case" id="4" localization="8" tooltip="Test input value and stimulate the output matching to this value. If there is no&#x0A;matching output, the default output (onDefault) is stimulated.&#x0A;&#x0A;You can edit a case by left double-clicking on the line. You can add a&#x0A;case by right clicking on a line and selecting &apos;Insert a row&apos;. You can delete&#x0A;a case by right clicking on a line and selecting &apos;Remove a row&apos;." plugin="dispatcher_plugin" x="82" y="174"><bitmap>media/images/box/interaction/choice.png</bitmap><script language="4"><content><![CDATA[# /!\ Generated content. Do not edit!
class MyClass(GeneratedClass):
	def __init__(self):
		try: # disable autoBind
		  GeneratedClass.__init__(self, False)
		except TypeError: # if NAOqi < 1.14
		  GeneratedClass.__init__( self )

	def onInput_onStart(self, p):
		p = self.typeConversion(p)
		if(p == self.typeConversion(0)):
			self.output_1(p)
		elif(p == self.typeConversion(1)):
			self.output_2(p)
		else:
			self.onDefault()

	def typeConversion(self, p):
		try:
			p = float(p)
			pint = int(p)
			if( p == pint ):
				p = pint
		except:
			p = str(p)
		return p]]></content></script><pluginContent><keywords><keyword>0</keyword><keyword>1</keyword><keyword></keyword></keywords></pluginContent><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="0" type_size="1" nature="1" inner="0" tooltip="Value to test." id="2" /><Output name="onDefault" type="1" type_size="1" nature="2" inner="0" tooltip="If the input value does not match any value set on the box." id="3" /><Output name="output_1" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="4" /><Output name="output_2" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="5" /></Box><Box name="Text Edit" id="1" localization="8" tooltip="Send the text you entered when the input is stimulated." plugin="textedit_plugin" x="290" y="34"><bitmap>media/images/box/interaction/vocabulary.png</bitmap><script language="4"><content><![CDATA[# /!\ Generated content. Do not edit!
class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onInput_onStart(self):
		self.onStopped("Nice weather to play a round of golf")]]></content></script><pluginContent><text><![CDATA[Nice weather to play a round of golf]]></text></pluginContent><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="1" inner="0" tooltip="To send the text on the output." id="2" /><Output name="onStopped" type="3" type_size="1" nature="2" inner="0" tooltip="The text you entered." id="3" /></Box><Box name="Say Text" id="2" localization="8" tooltip="Say the text received on its input." x="624" y="25"><bitmap>media/images/box/interaction/say.png</bitmap><script language="4"><content><![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)
        self.tts = ALProxy('ALTextToSpeech')
        self.ttsStop = ALProxy('ALTextToSpeech', True) #Create another proxy as wait is blocking if audioout is remote

    def onLoad(self):
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self, p):
        self.bIsRunning = True
        try:
            sentence = "\RSPD="+ str( self.getParameter("Speed (%)") ) + "\ "
            sentence += "\VCT="+ str( self.getParameter("Voice shaping (%)") ) + "\ "
            sentence += str(p)
            sentence +=  "\RST\ "
            id = self.tts.post.say(str(sentence))
            self.ids.append(id)
            self.tts.wait(id, 0)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Parameter name="Voice shaping (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.' id="5" /><Parameter name="Speed (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed." id="6" /><Resource name="Speech" type="Lock" timeout="0" /></Box><Box name="Text Edit (1)" id="5" localization="8" tooltip="Send the text you entered when the input is stimulated." plugin="textedit_plugin" x="655" y="202"><bitmap>media/images/box/interaction/vocabulary.png</bitmap><script language="4"><content><![CDATA[# /!\ Generated content. Do not edit!
class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onInput_onStart(self):
		self.onStopped("Victory!!!")]]></content></script><pluginContent><text><![CDATA[Victory!!!]]></text></pluginContent><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="1" inner="0" tooltip="To send the text on the output." id="2" /><Output name="onStopped" type="3" type_size="1" nature="2" inner="0" tooltip="The text you entered." id="3" /></Box><Box name="Say Text (1)" id="6" localization="8" tooltip="Say the text received on its input." x="993" y="235"><bitmap>media/images/box/interaction/say.png</bitmap><script language="4"><content><![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)
        self.tts = ALProxy('ALTextToSpeech')
        self.ttsStop = ALProxy('ALTextToSpeech', True) #Create another proxy as wait is blocking if audioout is remote

    def onLoad(self):
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self, p):
        self.bIsRunning = True
        try:
            sentence = "\RSPD="+ str( self.getParameter("Speed (%)") ) + "\ "
            sentence += "\VCT="+ str( self.getParameter("Voice shaping (%)") ) + "\ "
            sentence += str(p)
            sentence +=  "\RST\ "
            id = self.tts.post.say(str(sentence))
            self.ids.append(id)
            self.tts.wait(id, 0)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Parameter name="Voice shaping (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.' id="5" /><Parameter name="Speed (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed." id="6" /><Resource name="Speech" type="Lock" timeout="0" /></Box><Box name="Stand Up" id="75" localization="8" tooltip="the robot tries to stand up from any position for a number of tries.&#x0A;&#x0A;Note: The number of tries can be set in parameters." x="1163" y="104"><bitmap>media/images/box/movement/stand.png</bitmap><script language="4"><content><![CDATA[]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="success" type="1" type_size="1" nature="1" inner="0" tooltip="Stimulated when the robot succeed in standing up." id="4" /><Output name="failure" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when the robot failed to stand up after n tries.&#x0A;&#x0A;Note: The number of tries can be set in parameters." id="5" /><Parameter name="Maximum of tries" inherits_from_parent="0" content_type="1" value="3" default_value="3" min="0" max="10" tooltip="The maximum number of fails of stand up before stimulating the failure output." id="6" /><Timeline enable="0"><BehaviorLayer name="StandUpBehavior"><BehaviorKeyframe name="DetectRobotPose" index="1"><Diagram><Box name="Goto Posture" id="2" localization="8" tooltip="The robot goes from its current postition to the asked posture." x="331" y="92"><bitmap>media/images/box/box-diagram.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.nTries = 0
        self.postureProxy = ALProxy("ALRobotPosture")
        pass

    def onUnload(self):
        self.postureProxy.stopMove()

    def onInput_onStart(self):
        if(self.nTries != self.getParameter("Maximum of tries")):
            self.nTries = self.getParameter("Maximum of tries")
            self.postureProxy.setMaxTryNumber(self.nTries)

        result = self.postureProxy.goToPosture(self.getParameter("Name"), self.getParameter("Speed (%)")/100.)
        if(result):
            self.success()
        else:
            self.failure()
        pass

    def onInput_onStop(self):
        self.onUnload() #~ it is recommanded to call onUnload of this box in a onStop method, as the code written in onUnload is used to stop the box as well
        pass]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="success" type="1" type_size="1" nature="1" inner="0" tooltip="Stimulated if the posture has been reached." id="4" /><Output name="failure" type="1" type_size="1" nature="1" inner="0" tooltip="Stimulated if the posture could not be reached." id="5" /><Parameter name="Name" inherits_from_parent="0" content_type="3" value="Stand" default_value="Stand" custom_choice="1" tooltip="Name of the posture to go to." id="6"><Choice value="Crouch" /><Choice value="LyingBack" /><Choice value="LyingBelly" /><Choice value="Sit" /><Choice value="SitRelax" /><Choice value="StandInit" /><Choice value="Stand" /><Choice value="StandZero" /></Parameter><Parameter name="Speed (%)" inherits_from_parent="0" content_type="1" value="30" default_value="80" min="0" max="100" tooltip="Speed to go to the posture." id="7" /><Parameter name="Maximum of tries" inherits_from_parent="1" content_type="1" value="3" default_value="3" min="0" max="10" tooltip="The maximum number of fails of go to posture before stimulating the failure output." id="8" /><Resource name="All motors" type="Lock" timeout="0" /><Resource name="Stiffness" type="Lock" timeout="0" /></Box><Link inputowner="2" indexofinput="2" outputowner="0" indexofoutput="2" /><Link inputowner="0" indexofinput="4" outputowner="2" indexofoutput="4" /><Link inputowner="0" indexofinput="5" outputowner="2" indexofoutput="5" /></Diagram></BehaviorKeyframe></BehaviorLayer></Timeline><Resource name="All motors" type="Lock" timeout="0" /></Box><Box name="Text Edit (2)" id="7" localization="8" tooltip="Send the text you entered when the input is stimulated." plugin="textedit_plugin" x="224" y="330"><bitmap>media/images/box/interaction/vocabulary.png</bitmap><script language="4"><content><![CDATA[# /!\ Generated content. Do not edit!
class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onInput_onStart(self):
		self.onStopped("Ideal conditions for a football match today!")]]></content></script><pluginContent><text><![CDATA[Ideal conditions for a football match today!]]></text></pluginContent><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="1" inner="0" tooltip="To send the text on the output." id="2" /><Output name="onStopped" type="3" type_size="1" nature="2" inner="0" tooltip="The text you entered." id="3" /></Box><Box name="Say Text (2)" id="9" localization="8" tooltip="Say the text received on its input." x="506" y="307"><bitmap>media/images/box/interaction/say.png</bitmap><script language="4"><content><![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)
        self.tts = ALProxy('ALTextToSpeech')
        self.ttsStop = ALProxy('ALTextToSpeech', True) #Create another proxy as wait is blocking if audioout is remote

    def onLoad(self):
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self, p):
        self.bIsRunning = True
        try:
            sentence = "\RSPD="+ str( self.getParameter("Speed (%)") ) + "\ "
            sentence += "\VCT="+ str( self.getParameter("Voice shaping (%)") ) + "\ "
            sentence += str(p)
            sentence +=  "\RST\ "
            id = self.tts.post.say(str(sentence))
            self.ids.append(id)
            self.tts.wait(id, 0)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Parameter name="Voice shaping (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.' id="5" /><Parameter name="Speed (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed." id="6" /><Resource name="Speech" type="Lock" timeout="0" /></Box><Box name="Text Edit (3)" id="10" localization="8" tooltip="Send the text you entered when the input is stimulated." plugin="textedit_plugin" x="634" y="456"><bitmap>media/images/box/interaction/vocabulary.png</bitmap><script language="4"><content><![CDATA[# /!\ Generated content. Do not edit!
class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onInput_onStart(self):
		self.onStopped("I am the Champion")]]></content></script><pluginContent><text><![CDATA[I am the Champion]]></text></pluginContent><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="1" inner="0" tooltip="To send the text on the output." id="2" /><Output name="onStopped" type="3" type_size="1" nature="2" inner="0" tooltip="The text you entered." id="3" /></Box><Box name="Golf" id="8" localization="8" tooltip="ID : #04E 0002&#x0A;&#x0A;===================&#x0A;&#x0A;Tags : &#x0A;- Golf" x="509" y="147"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="327"><ActuatorList model=""><ActuatorCurve name="value" actuator="HeadPitch" mute="0" unit="0"><Key frame="1" value="-11.3404" /><Key frame="74" value="29.5" /><Key frame="95" value="-11.9" /><Key frame="112" value="-11.9" /><Key frame="128" value="16.3455" /><Key frame="161" value="29.5" /><Key frame="179" value="-11.9" /><Key frame="191" value="16.1697" /><Key frame="230" value="-11.9" /><Key frame="239" value="-10.4615" /><Key frame="289" value="-10.4615" /><Key frame="304" value="2.2" /><Key frame="327" value="-6.85796" /></ActuatorCurve><ActuatorCurve name="value" actuator="HeadYaw" mute="0" unit="0"><Key frame="1" value="-0.178186" /><Key frame="49" value="-5.89115" /><Key frame="74" value="-5.89115" /><Key frame="95" value="61.2" /><Key frame="112" value="61.2" /><Key frame="128" value="-5.89115" /><Key frame="161" value="-5.89115" /><Key frame="179" value="61.2" /><Key frame="191" value="-5.18802" /><Key frame="230" value="61.2" /><Key frame="239" value="60.555" /><Key frame="289" value="60.555" /><Key frame="327" value="-0.61764" /></ActuatorCurve><ActuatorCurve name="value" actuator="LAnklePitch" mute="0" unit="0"><Key frame="1" value="5.09532" /><Key frame="21" value="6.94104" /><Key frame="49" value="6.94104" /><Key frame="86" value="10.8083" /><Key frame="97" value="10.8083" /><Key frame="145" value="9.31412" /><Key frame="158" value="9.31412" /><Key frame="199" value="6.94104" /><Key frame="223" value="-10.2857" /><Key frame="239" value="6.67737" /><Key frame="289" value="6.67737" /><Key frame="304" value="-10.5494" /><Key frame="327" value="-4.92435" /></ActuatorCurve><ActuatorCurve name="value" actuator="LAnkleRoll" mute="0" unit="0"><Key frame="1" value="-7.46839" /><Key frame="21" value="3.69386" /><Key frame="49" value="3.69386" /><Key frame="86" value="-1.40386" /><Key frame="97" value="-1.40386" /><Key frame="145" value="6.06693" /><Key frame="158" value="6.06693" /><Key frame="199" value="3.69386" /><Key frame="223" value="3.86964" /><Key frame="239" value="3.69386" /><Key frame="289" value="3.69386" /><Key frame="304" value="3.86964" /><Key frame="327" value="0.353968" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="0"><Key frame="1" value="-24.0799" /><Key frame="24" value="-88.5" /><Key frame="49" value="-32.4296" /><Key frame="80" value="-2" /><Key frame="127" value="-36.3848" /><Key frame="162" value="-6.06212" /><Key frame="179" value="-36.3848" /><Key frame="199" value="-35.2422" /><Key frame="239" value="-34.9785" /><Key frame="289" value="-34.9785" /><Key frame="304" value="-62.0492" /><Key frame="327" value="-9.13833" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="0"><Key frame="1" value="-67.4154" /><Key frame="24" value="-108.285" /><Key frame="49" value="-73.7436" /><Key frame="80" value="-93.3434" /><Key frame="127" value="-59.3293" /><Key frame="162" value="-57.8352" /><Key frame="179" value="-59.3293" /><Key frame="199" value="-59.6809" /><Key frame="239" value="-59.6809" /><Key frame="289" value="-59.6809" /><Key frame="304" value="-72.8646" /><Key frame="327" value="-59.6809" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="1"><Key frame="1" value="0.3032" /><Key frame="24" value="0.5004" /><Key frame="49" value="0.7624" /><Key frame="80" value="0.7628" /><Key frame="127" value="0.7628" /><Key frame="162" value="1" /><Key frame="179" value="0.7628" /><Key frame="199" value="0.7644" /><Key frame="239" value="0.7648" /><Key frame="289" value="0.7648" /><Key frame="304" value="0.54" /><Key frame="327" value="0.3328" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipPitch" mute="0" unit="0"><Key frame="1" value="7.4732" /><Key frame="21" value="-13.3571" /><Key frame="49" value="-13.3571" /><Key frame="86" value="-16.6091" /><Key frame="97" value="-16.6091" /><Key frame="145" value="-16.1697" /><Key frame="158" value="-16.1697" /><Key frame="199" value="-13.3571" /><Key frame="223" value="-33.1328" /><Key frame="239" value="-13.7966" /><Key frame="289" value="-13.7966" /><Key frame="304" value="-33.8359" /><Key frame="327" value="17.4929" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipRoll" mute="0" unit="0"><Key frame="1" value="5.89115" /><Key frame="21" value="-5.2711" /><Key frame="49" value="-5.2711" /><Key frame="86" value="-1.14019" /><Key frame="97" value="-1.14019" /><Key frame="145" value="-8.17153" /><Key frame="158" value="-8.17153" /><Key frame="199" value="-5.2711" /><Key frame="223" value="-4.91954" /><Key frame="239" value="-5.2711" /><Key frame="289" value="-5.2711" /><Key frame="304" value="-5.97423" /><Key frame="327" value="-0.964409" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="0" unit="0"><Key frame="1" value="-9.66569" /><Key frame="21" value="-5.53478" /><Key frame="49" value="-5.53478" /><Key frame="86" value="-6.58948" /><Key frame="97" value="-6.58948" /><Key frame="145" value="-6.50159" /><Key frame="158" value="-6.50159" /><Key frame="199" value="-5.62267" /><Key frame="223" value="-7.20472" /><Key frame="239" value="-5.88634" /><Key frame="289" value="-5.88634" /><Key frame="304" value="-7.81997" /><Key frame="327" value="-6.94104" /></ActuatorCurve><ActuatorCurve name="value" actuator="LKneePitch" mute="0" unit="0"><Key frame="1" value="-5.18802" /><Key frame="21" value="-5.27591" /><Key frame="49" value="-5.27591" /><Key frame="86" value="-5.27591" /><Key frame="97" value="-5.27591" /><Key frame="145" value="-4.48488" /><Key frame="158" value="-4.48488" /><Key frame="199" value="-5.18802" /><Key frame="223" value="33.748" /><Key frame="239" value="-4.83644" /><Key frame="289" value="-4.83644" /><Key frame="304" value="31.1113" /><Key frame="327" value="-3.60597" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="0"><Key frame="1" value="85.2526" /><Key frame="24" value="109.686" /><Key frame="49" value="65.1254" /><Key frame="80" value="49.7443" /><Key frame="127" value="76.0239" /><Key frame="162" value="63.3675" /><Key frame="179" value="76.0239" /><Key frame="199" value="76.5513" /><Key frame="239" value="76.6392" /><Key frame="289" value="76.6392" /><Key frame="304" value="104.677" /><Key frame="327" value="102.831" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="0"><Key frame="1" value="4.91954" /><Key frame="24" value="-10.1978" /><Key frame="49" value="-18" /><Key frame="80" value="-18" /><Key frame="127" value="-18" /><Key frame="162" value="-18" /><Key frame="179" value="-18" /><Key frame="199" value="-18" /><Key frame="239" value="-15.9987" /><Key frame="289" value="-15.9987" /><Key frame="304" value="28.0351" /><Key frame="327" value="9.48991" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="0"><Key frame="1" value="3.24959" /><Key frame="24" value="11.863" /><Key frame="49" value="6.2379" /><Key frame="80" value="5.88634" /><Key frame="127" value="-33.6649" /><Key frame="162" value="-50.4523" /><Key frame="179" value="-33.6649" /><Key frame="199" value="-34.7196" /><Key frame="239" value="-34.8075" /><Key frame="289" value="-34.8075" /><Key frame="304" value="-51.507" /><Key frame="327" value="-60.8235" /></ActuatorCurve><ActuatorCurve name="value" actuator="RAnklePitch" mute="0" unit="0"><Key frame="1" value="5.3638" /><Key frame="21" value="5.89115" /><Key frame="49" value="5.89115" /><Key frame="86" value="7.20952" /><Key frame="97" value="7.20952" /><Key frame="145" value="9.6705" /><Key frame="158" value="9.6705" /><Key frame="199" value="5.62747" /><Key frame="223" value="-13.5329" /><Key frame="239" value="5.01224" /><Key frame="289" value="5.01224" /><Key frame="304" value="-14.5876" /><Key frame="327" value="-4.04062" /></ActuatorCurve><ActuatorCurve name="value" actuator="RAnkleRoll" mute="0" unit="0"><Key frame="1" value="7.38531" /><Key frame="21" value="-1.0523" /><Key frame="49" value="-1.0523" /><Key frame="86" value="-6.67737" /><Key frame="97" value="-6.67737" /><Key frame="145" value="1.76024" /><Key frame="158" value="1.76024" /><Key frame="199" value="-1.0523" /><Key frame="223" value="-2.0191" /><Key frame="239" value="-1.0523" /><Key frame="289" value="-1.0523" /><Key frame="304" value="-1.57965" /><Key frame="327" value="-1.0523" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="0"><Key frame="1" value="24.4363" /><Key frame="24" value="87.8062" /><Key frame="49" value="24.6121" /><Key frame="80" value="2.1997" /><Key frame="127" value="47.7276" /><Key frame="162" value="2.1997" /><Key frame="179" value="47.7276" /><Key frame="199" value="46.8487" /><Key frame="239" value="46.1456" /><Key frame="289" value="46.1456" /><Key frame="304" value="57.2199" /><Key frame="327" value="2.90283" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="0"><Key frame="1" value="67.7621" /><Key frame="24" value="93.866" /><Key frame="49" value="71.8051" /><Key frame="80" value="98.9637" /><Key frame="127" value="76.1997" /><Key frame="162" value="88.0651" /><Key frame="179" value="76.1997" /><Key frame="199" value="76.9029" /><Key frame="239" value="76.9908" /><Key frame="289" value="76.9908" /><Key frame="304" value="89.9987" /><Key frame="327" value="93.3386" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="1"><Key frame="1" value="0.306" /><Key frame="24" value="0.2544" /><Key frame="49" value="0.17" /><Key frame="80" value="0.26" /><Key frame="127" value="0.32" /><Key frame="162" value="0.26" /><Key frame="179" value="0.32" /><Key frame="199" value="0.3172" /><Key frame="239" value="0.3172" /><Key frame="289" value="0.3172" /><Key frame="304" value="0.5188" /><Key frame="327" value="0.0472" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHipPitch" mute="0" unit="0"><Key frame="1" value="7.3805" /><Key frame="21" value="-12.483" /><Key frame="49" value="-12.483" /><Key frame="86" value="-14.2409" /><Key frame="97" value="-14.2409" /><Key frame="145" value="-15.9987" /><Key frame="158" value="-15.9987" /><Key frame="199" value="-13.0104" /><Key frame="223" value="-29.4461" /><Key frame="239" value="-13.274" /><Key frame="289" value="-13.274" /><Key frame="304" value="-32.6981" /><Key frame="327" value="19.0701" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHipRoll" mute="0" unit="0"><Key frame="1" value="-5.79845" /><Key frame="21" value="3.1665" /><Key frame="49" value="3.1665" /><Key frame="86" value="8.35212" /><Key frame="97" value="8.35212" /><Key frame="145" value="0.61764" /><Key frame="158" value="0.61764" /><Key frame="199" value="3.1665" /><Key frame="223" value="5.01224" /><Key frame="239" value="3.1665" /><Key frame="289" value="3.1665" /><Key frame="304" value="3.69386" /><Key frame="327" value="0.881327" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHipYawPitch" mute="0" unit="0"><Key frame="1" value="-9.66569" /><Key frame="21" value="-5.53478" /><Key frame="49" value="-5.53478" /><Key frame="86" value="-6.58948" /><Key frame="97" value="-6.58948" /><Key frame="145" value="-6.50159" /><Key frame="158" value="-6.50159" /><Key frame="199" value="-5.62267" /><Key frame="223" value="-7.20472" /><Key frame="239" value="-5.88634" /><Key frame="289" value="-5.88634" /><Key frame="304" value="-7.81997" /><Key frame="327" value="-6.94104" /></ActuatorCurve><ActuatorCurve name="value" actuator="RKneePitch" mute="0" unit="0"><Key frame="1" value="-5.18321" /><Key frame="21" value="-5.29" /><Key frame="49" value="-5.29" /><Key frame="86" value="-5.00743" /><Key frame="97" value="-5.00743" /><Key frame="145" value="-5.2711" /><Key frame="158" value="-5.2711" /><Key frame="199" value="-5.18321" /><Key frame="223" value="32.9618" /><Key frame="239" value="-4.83163" /><Key frame="289" value="-4.83163" /><Key frame="304" value="34.456" /><Key frame="327" value="-5.29" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="0"><Key frame="1" value="86.2242" /><Key frame="24" value="105.297" /><Key frame="49" value="62.4055" /><Key frame="80" value="50.7159" /><Key frame="127" value="86.5758" /><Key frame="162" value="64.1634" /><Key frame="179" value="86.5758" /><Key frame="199" value="86.1363" /><Key frame="239" value="86.0484" /><Key frame="289" value="86.0484" /><Key frame="304" value="107.318" /><Key frame="327" value="99.0564" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="0"><Key frame="1" value="-4.57277" /><Key frame="24" value="3.60116" /><Key frame="49" value="18" /><Key frame="80" value="18" /><Key frame="127" value="18" /><Key frame="162" value="18" /><Key frame="179" value="18" /><Key frame="199" value="18" /><Key frame="239" value="16.697" /><Key frame="289" value="16.697" /><Key frame="304" value="-18.6354" /><Key frame="327" value="-6.5064" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="0"><Key frame="1" value="3.95273" /><Key frame="24" value="49.1291" /><Key frame="49" value="0.612832" /><Key frame="80" value="-2.81494" /><Key frame="127" value="-9.58261" /><Key frame="162" value="-0.353968" /><Key frame="179" value="-9.58261" /><Key frame="199" value="-6.68218" /><Key frame="239" value="-6.5064" /><Key frame="289" value="-6.5064" /><Key frame="304" value="25.9256" /><Key frame="327" value="11.7751" /></ActuatorCurve></ActuatorList></Timeline><Resource name="Standing" type="Lock" timeout="1" /><Resource name="All motors" type="Lock" timeout="1" /></Box><Link inputowner="4" indexofinput="2" outputowner="3" indexofoutput="3" /><Link inputowner="3" indexofinput="2" outputowner="0" indexofoutput="2" /><Link inputowner="1" indexofinput="2" outputowner="4" indexofoutput="3" /><Link inputowner="1" indexofinput="2" outputowner="4" indexofoutput="5" /><Link inputowner="2" indexofinput="2" outputowner="1" indexofoutput="3" /><Link inputowner="6" indexofinput="2" outputowner="5" indexofoutput="3" /><Link inputowner="75" indexofinput="2" outputowner="6" indexofoutput="4" /><Link inputowner="0" indexofinput="4" outputowner="75" indexofoutput="4" /><Link inputowner="7" indexofinput="2" outputowner="4" indexofoutput="4" /><Link inputowner="19" indexofinput="2" outputowner="7" indexofoutput="3" /><Link inputowner="9" indexofinput="2" outputowner="7" indexofoutput="3" /><Link inputowner="6" indexofinput="2" outputowner="10" indexofoutput="3" /><Link inputowner="10" indexofinput="2" outputowner="19" indexofoutput="4" /><Link inputowner="8" indexofinput="2" outputowner="1" indexofoutput="3" /><Link inputowner="5" indexofinput="2" outputowner="8" indexofoutput="4" /></Diagram></BehaviorKeyframe></BehaviorLayer></Timeline></Box></ChoregrapheProject>